// <auto-generated />
using System;
using System.Collections;
using AnimeJail.App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimeJail.App.Migrations
{
    [DbContext(typeof(SharpProjectsContext))]
    [Migration("20240304201311_M1")]
    partial class M1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimeJail.App.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("text")
                        .HasColumnName("apartmentNumber");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("text")
                        .HasColumnName("buildingNumber");

                    b.Property<int>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("cityId");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("streetName");

                    b.HasKey("Id")
                        .HasName("Address_pkey");

                    b.HasIndex("CityId");

                    b.ToTable("Address", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("Article_pkey");

                    b.ToTable("Article", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.ArticlePrisoner", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("articleId");

                    b.Property<int>("PrisonerId")
                        .HasColumnType("integer")
                        .HasColumnName("prisonerId");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("statusId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("PrisonerId");

                    b.HasIndex("StatusId");

                    b.ToTable("ArticlePrisoner", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.ArticleStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("ArticleStatus_pkey");

                    b.ToTable("ArticleStatus", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("countryId");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer")
                        .HasColumnName("regionId");

                    b.HasKey("Id")
                        .HasName("City_pkey");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegionId");

                    b.HasIndex(new[] { "Name" }, "City_name_key")
                        .IsUnique();

                    b.ToTable("City", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("Country_pkey");

                    b.HasIndex(new[] { "Name" }, "Country_name_key")
                        .IsUnique();

                    b.ToTable("Country", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<DateOnly?>("Dismdate")
                        .HasColumnType("date")
                        .HasColumnName("dismdate");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstName");

                    b.Property<DateOnly>("Hiredate")
                        .HasColumnType("date")
                        .HasColumnName("hiredate");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text")
                        .HasColumnName("middleName");

                    b.Property<int>("PassportId")
                        .HasColumnType("integer")
                        .HasColumnName("passportId");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("secondName");

                    b.Property<int>("WorkPositionId")
                        .HasColumnType("integer")
                        .HasColumnName("workPositionId");

                    b.HasKey("Id")
                        .HasName("Employee_pkey");

                    b.HasIndex("PassportId");

                    b.HasIndex("WorkPositionId");

                    b.ToTable("Employee", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Jail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int?>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("typeId");

                    b.HasKey("Id")
                        .HasName("Jail_pkey");

                    b.HasIndex("TypeId");

                    b.ToTable("Jail", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.JailPrisoner", b =>
                {
                    b.Property<int>("BerthId")
                        .HasColumnType("integer")
                        .HasColumnName("berthId");

                    b.Property<int>("JailId")
                        .HasColumnType("integer")
                        .HasColumnName("jailId");

                    b.Property<int>("PrisonerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prisonerId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("PrisonerId"));

                    b.HasIndex("JailId");

                    b.HasIndex("PrisonerId");

                    b.ToTable("Jail_Prisoner", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.JailType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("JailType_pkey");

                    b.ToTable("JailType", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.PassportDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int?>("DomiclleRegistrationAdressId")
                        .HasColumnType("integer")
                        .HasColumnName("domiclleRegistrationAdressId");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("issueDate");

                    b.Property<int>("IssuingCountryId")
                        .HasColumnType("integer")
                        .HasColumnName("issuingCountryId");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int?>("Serial")
                        .HasColumnType("integer")
                        .HasColumnName("serial");

                    b.HasKey("Id")
                        .HasName("PassportData_pkey");

                    b.HasIndex("DomiclleRegistrationAdressId");

                    b.HasIndex("IssuingCountryId");

                    b.HasIndex(new[] { "Serial" }, "PassportData_serial_number_key")
                        .IsUnique();

                    b.ToTable("PassportData", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Prisoner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer")
                        .HasColumnName("addressId");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birthDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstName");

                    b.Property<DateOnly>("FreedomDate")
                        .HasColumnType("date")
                        .HasColumnName("freedomDate");

                    b.Property<DateOnly>("ImprisonmentDate")
                        .HasColumnType("date")
                        .HasColumnName("imprisonmentDate");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text")
                        .HasColumnName("middleName");

                    b.Property<int>("PassportId")
                        .HasColumnType("integer")
                        .HasColumnName("passportId");

                    b.Property<BitArray>("Photo")
                        .HasColumnType("bit(1)")
                        .HasColumnName("photo");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("secondName");

                    b.HasKey("Id")
                        .HasName("Prisoner_pkey");

                    b.HasIndex("AddressId");

                    b.HasIndex("PassportId");

                    b.ToTable("Prisoner", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("countryId");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("Region_pkey");

                    b.HasIndex("CountryId");

                    b.HasIndex(new[] { "Name" }, "Region_name_key")
                        .IsUnique();

                    b.ToTable("Region", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employeeId");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("User_pkey");

                    b.HasIndex("EmployeeId");

                    b.HasIndex(new[] { "Login" }, "User_login_key")
                        .IsUnique();

                    b.ToTable("User", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.WorkPostion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("WorkPostion_pkey");

                    b.HasIndex(new[] { "Name" }, "WorkPostion_name_key")
                        .IsUnique();

                    b.ToTable("WorkPostion", "AnimeJailDb");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Address", b =>
                {
                    b.HasOne("AnimeJail.App.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("Address_cityId_fkey");

                    b.Navigation("City");
                });

            modelBuilder.Entity("AnimeJail.App.Models.ArticlePrisoner", b =>
                {
                    b.HasOne("AnimeJail.App.Models.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .IsRequired()
                        .HasConstraintName("ArticlePrisoner_articleId_fkey");

                    b.HasOne("AnimeJail.App.Models.Prisoner", "Prisoner")
                        .WithMany()
                        .HasForeignKey("PrisonerId")
                        .IsRequired()
                        .HasConstraintName("ArticlePrisoner_prisonerId_fkey");

                    b.HasOne("AnimeJail.App.Models.ArticleStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("ArticlePrisoner_statusId_fkey");

                    b.Navigation("Article");

                    b.Navigation("Prisoner");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AnimeJail.App.Models.City", b =>
                {
                    b.HasOne("AnimeJail.App.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("City_countryId_fkey");

                    b.HasOne("AnimeJail.App.Models.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("City_regionId_fkey");

                    b.Navigation("Country");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Employee", b =>
                {
                    b.HasOne("AnimeJail.App.Models.PassportDatum", "Passport")
                        .WithMany("Employees")
                        .HasForeignKey("PassportId")
                        .IsRequired()
                        .HasConstraintName("Employee_passportId_fkey");

                    b.HasOne("AnimeJail.App.Models.WorkPostion", "WorkPosition")
                        .WithMany("Employees")
                        .HasForeignKey("WorkPositionId")
                        .IsRequired()
                        .HasConstraintName("Employee_workPositionId_fkey");

                    b.Navigation("Passport");

                    b.Navigation("WorkPosition");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Jail", b =>
                {
                    b.HasOne("AnimeJail.App.Models.JailType", "Type")
                        .WithMany("Jails")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("Jail_typeId_fkey");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AnimeJail.App.Models.JailPrisoner", b =>
                {
                    b.HasOne("AnimeJail.App.Models.Jail", "Jail")
                        .WithMany()
                        .HasForeignKey("JailId")
                        .IsRequired()
                        .HasConstraintName("Jail_Prisoner_jailId_fkey");

                    b.HasOne("AnimeJail.App.Models.Prisoner", "Prisoner")
                        .WithMany()
                        .HasForeignKey("PrisonerId")
                        .IsRequired()
                        .HasConstraintName("Jail_Prisoner_prisonerId_fkey");

                    b.Navigation("Jail");

                    b.Navigation("Prisoner");
                });

            modelBuilder.Entity("AnimeJail.App.Models.PassportDatum", b =>
                {
                    b.HasOne("AnimeJail.App.Models.Address", "DomiclleRegistrationAdress")
                        .WithMany("PassportData")
                        .HasForeignKey("DomiclleRegistrationAdressId")
                        .HasConstraintName("PassportData_domiclleRegistrationAdressId_fkey");

                    b.HasOne("AnimeJail.App.Models.Country", "IssuingCountry")
                        .WithMany("PassportData")
                        .HasForeignKey("IssuingCountryId")
                        .IsRequired()
                        .HasConstraintName("PassportData_issuingCountryId_fkey");

                    b.Navigation("DomiclleRegistrationAdress");

                    b.Navigation("IssuingCountry");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Prisoner", b =>
                {
                    b.HasOne("AnimeJail.App.Models.Address", "Address")
                        .WithMany("Prisoners")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("Prisoner_addressId_fkey");

                    b.HasOne("AnimeJail.App.Models.PassportDatum", "Passport")
                        .WithMany("Prisoners")
                        .HasForeignKey("PassportId")
                        .IsRequired()
                        .HasConstraintName("Prisoner_passportId_fkey");

                    b.Navigation("Address");

                    b.Navigation("Passport");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Region", b =>
                {
                    b.HasOne("AnimeJail.App.Models.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("Region_countryId_fkey");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AnimeJail.App.Models.User", b =>
                {
                    b.HasOne("AnimeJail.App.Models.Employee", "Employee")
                        .WithMany("Users")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("User_employeeId_fkey");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Address", b =>
                {
                    b.Navigation("PassportData");

                    b.Navigation("Prisoners");
                });

            modelBuilder.Entity("AnimeJail.App.Models.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("PassportData");

                    b.Navigation("Regions");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Employee", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AnimeJail.App.Models.JailType", b =>
                {
                    b.Navigation("Jails");
                });

            modelBuilder.Entity("AnimeJail.App.Models.PassportDatum", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Prisoners");
                });

            modelBuilder.Entity("AnimeJail.App.Models.Region", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("AnimeJail.App.Models.WorkPostion", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
